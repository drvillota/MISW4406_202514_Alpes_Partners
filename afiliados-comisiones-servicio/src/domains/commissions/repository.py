from __future__ import annotations
from typing import Optional, List
from uuid import UUID
from ...core.seedwork.repository import Repository
from .entities import Conversion, Comision

class ConversionRepository(Repository):
    def add(self, entity: Conversion) -> None: ...
    def get(self, entity_id: UUID) -> Optional[Conversion]: ...

class ComisionRepository(Repository):
    def add(self, entity: Comision) -> None: ...
    def get(self, entity_id: UUID) -> Optional[Comision]: ...
    def list_by_affiliate(self, affiliate_id: UUID, desde: Optional[str]=None, hasta: Optional[str]=None) -> List[Comision]: ...
